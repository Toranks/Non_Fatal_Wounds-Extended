#textdomain wesnoth-nfw
[modification]
    id=non_fatal_wounds
    name=_"Non-fatal wound system"
    description=_"Units killed during a scenario are instead merely wounded, and can be recalled in later scenarios."
    require_modification=no

    # Note: although the player-visible language is about the units not dying, the code and comments are about respawning units after they die.

    # There shouldn't be a value of nfw_wounded from a previous scenario, but clear it just in case.
    [event]
        name=prestart
        {CLEAR_VARIABLE nfw_wounded}
    [/event]

    # Plot spoilers for campaigns - a list of scenarios where no units should survive
    [event]
        name=start
        [filter_condition]
            [lua]
                code=<<
                    local no_recalls = {
                        ['07b_Pebbles_in_the_Flood']=true, -- TSG's bandit branch
                        ['7_Outriding_the_Outriders']=true, -- SoF, peasants don't join the dwarves
                    }
                    return no_recalls[wesnoth.game_config.scenario_id]
                >>
            [/lua]
        [/filter_condition]
        [message]
            speaker=narrator
            message= _ "The non-fatal wound modification is disabled for this scenario"
        [/message]
        [remove_event]
            id=nfw_catch_last_breath
        [/remove_event]
    [/event]

    # Disable the mod on scenarios with {IS_LAST_SCENARIO}, both because there's no further recalls and because the ending may change slightly depending on which units die in the final battle.
    # This can't check for next_scenario=null, as many campaigns have an epilogue scenario.
    # Reading wesnoth.sides[x].objectives might be possible, but that's only available as the translated string.
    [event]
        name=start
        [filter_condition]
            [lua]
                code=<<
                    local result = wesnoth.synchronize_choice (function()
                        local _ = wesnoth.textdomain "wesnoth"
                        return { value = string.match (tostring(wesnoth.sides[1].objectives), tostring(_ "This is the last scenario."))}
                        end)
                    return result.value
                >>
            [/lua]
        [/filter_condition]
        [message]
            speaker=narrator
            message= _ "Because this is the last scenario, the non-fatal wound modification is disabled"
        [/message]
        [remove_event]
            id=nfw_catch_last_breath
        [/remove_event]
    [/event]

    # Give a warning on campaigns where the recall list keeps changing
    # I'm not worrying about campaigns like SotA, where the divergent paths have similar recruit lists and recombine later
    [event]
        name=start
        [filter_condition]
            [lua]
                code=<<
                    local changes_recalls = {
                        ['02_This_Valley_Belongs_to_Me']=true, -- Delfador's Memoirs, the first scenario is just dialogue
                        }
                    return changes_recalls[wesnoth.game_config.scenario_id]
                >>
            [/lua]
        [/filter_condition]
        [message]
            speaker=narrator
            message= _ "The non-fatal wound modification might work unusually with this campaign. The recall lists change during the campaign, and units that are non-fatally wounded may reappear on the wrong recall list."
        [/message]
    [/event]

    [event]
        name=last_breath
        first_time_only=no
        id=nfw_catch_last_breath
        [filter]
            x,y=$x1,$y1
            [not]
                # Plot spoilers for campaigns - a list of units that shouldn't be revived, at least not by this add-on.
                # This only matters if their death doesn't trigger an automatic defeat, and if the side that they're on will end up on the player's recall list.
                # Garak from UtBS, the white mages from NR, and Shynal from SotA
                id="Garak,Sister Thera,Father Morvin,Shynal,Corpse Shynal"
            [/not]
        [/filter]

        # This isn't limited to a particular side, because some campaigns have multiple persistent sides.
        # It isn't limited to player-controlled sides either, for example Olurf in LoW's 02_Hostile_Mountains.
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            mode=append
            variable=nfw_wounded
            kill=no
        [/store_unit]

        [fire_event]
            name=nfw_dialogue_on_first_death
            [primary_unit]
                id=$unit.id
            [/primary_unit]
        [/fire_event]
    [/event]

    # Text to inform the player that the unit was stored. This is in a separate event so that it doesn't repeat when more units die.
    [event]
        name=nfw_dialogue_on_first_death
        [filter]
            # Although the last_breath event stores units from all sides, only show when the first unit from the player's side dies (assuming that's side 1).
            side=1
        [/filter]

        [message]
            speaker=$unit.id
            message= _ "Argh, I'm wounded"
            female_message= _ "female^Argh, I'm wounded"
        [/message]
        [message]
            speaker=narrator
            message= _ "With this modification enabled, units are merely wounded instead of killed. If you win this scenario then they will be added to your recall list."
        [/message]
    [/event]

    # In multiplayer the victory event is synchronized since 1.13.10
    [event]
        name=victory
        [foreach]
            array=nfw_wounded
            [do]
                {VARIABLE this_item.hitpoints $this_item.max_hitpoints}
                {VARIABLE this_item.status.poisoned "no"}
                {VARIABLE this_item.status.slowed "no"}
                [unstore_unit]
                    variable=this_item
                    x,y=recall,recall
                [/unstore_unit]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE nfw_wounded}
    [/event]
[/modification]
